---
// Component Imports
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import { SITE } from '../config';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let { title } = SITE;
let description = 'Specializing in high growth disruptive technologies';
let permalink = 'https://example.com/'; // ADD URL HERE

// Data Fetching: List all Markdown posts in the repo.

let allPosts = await Astro.glob('./posts/*.md');
allPosts = allPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());

---
<html lang="en">
	<head>
		<BaseHead {title} {description} {permalink} />

		<style>
			.content {
				height: 100vh;
			}

			.title {
				margin-top: -8rem;
				text-align: center;
			}

			.main-heading {
				font-size: 6rem;
				font-weight: 700;
				margin-bottom: -0.5rem;
			}

			.main-bio {
				font-size: 1rem;
				margin-bottom: 2rem;
			}

			.svg {
				margin-top: 1.5rem;
       			width: 100%;
        		height: 600px;
      		}
			.main-room, .blue-room, .pink-room {
				fill: black;
				opacity: 0.5;
				stroke: transparent;
				pointer-events: all;
			}
			.main-room:hover, .blue-room:hover, .pink-room:hover {
				transition: ease 0.15s;
				opacity: 1;
				fill: none;
				stroke-width: 3px;
			}
			.main-room:hover {
				stroke: #73bed3;
			}

			.blue-room:hover {
				stroke: #a4dddb;

			} 
			.pink-room:hover {
				stroke: var(--color-pink);

			}
			.main-room-div-right {
				display: none;
				width: 15rem;
				position: absolute;
			}
			.popup-title {
				text-decoration: underline;
				font-size: 4rem;
				color: var(--color-blue);
			}
			.popup-text {
				font-size: 0.8rem;
				margin-top: 12rem;
				margin-left: -5rem;
			}
			.main-room-div-left {
				display: none;
				width: 18rem;
				position: absolute;
				z-index: 1;
				top: 18rem;
				left: 2rem;
			}
			.pink-room-popup {
				text-align: left;
				display: none;
				position: absolute;
				top: 25rem;
				left: 2rem;
			}
			#contact-header {
				color: var(--color-pink);
				text-decoration: underline;
				font-size: 4rem;
			}
			.contact-text {
				font-size: 0.8rem;
			}
			.blue-room-popup {
				display: none;
				position: absolute;
				z-index: 1;
				top: 40rem;
				right: 5rem;
			}
			.blue-room-popup-left {
				display: none;
				position: absolute;
				z-index: 1;
				width: 15rem;
			}
			#bio-header {
				font-size: 4rem;
				text-decoration: underline;
			}
			#bio-p {
				margin-top: -20rem;
				margin-bottom: 4rem;
				width: 15rem;
				margin-left: 8rem;
			}
			#bio-p-left, #bio-p, #bio-header {
				color: #a4dddb;
			}

			.references {
				position: absolute;
				height: 20rem;
				width: 100%;
				bottom: 0;
				transform: translateY(14rem);
				background-color: #090a14;
			}


			.active-header {
				color: var(--color-blue);
			}

		</style>
	</head>

	<body>
		<BlogHeader />
		<div class="wrapper">
			<main class="content">
					<div class="title">
						<h1 class="main-heading">THE DECENTRALAWYER</h1>
						<p class="main-bio">{description}</p>
					</div>

					<!-- svg integration -->
						<figure class="figure">
						  <svg
							class="svg"
							viewBox="0 0 1500 1200"
							preserveAspectRatio="xMinYMin meet"
						  >
							<image
							  class="img"
							  xlink:href="/assets/DecentralawyerOfficeMain_smaller.png"
							/>
				  
							<g class="hover-group">
							  <polygon
								class="main-room"
								points="200, 275 745, 0 1340, 295 1340, 450 948, 647"
							  />
							</g>
							<g class="hover-group">
							  <polygon
								class="blue-room"
								points="320, 840 320, 685 672, 511 1010, 678 1010, 830 660, 1005"
							  />
							</g>
							<g class="hover-group">
							  <polygon
								class="pink-room"
								points="320, 840 320, 685 672, 510 380, 365 0, 550 0, 680  "
							  />
							</g>
						  </svg>
						  <div class="main-room-div-right">
							<h1 class="popup-title">Skills</h1>
							<p class="popup-text">Yeah, I heard of C500, he's a true disgrace
								Trynna act like a king but he ain't got no taste
								Can't compete with the real, he's a lukewarm fake
								Can't even compare, he's just a silly mistake</p>
						  </div>
						  <div class="main-room-div-left">
							<p>Frederick thinks he's top notch, but his rhymes are a flop,
								He thinks he's a king, but he's a jester, with a mop.
								His flow ain't the best, his lyrics are a mess,
								He's so far behind, he won't pass the final test
							</p>
						  </div>

						  <div class="pink-room-popup">
							<h1 id="contact-header">Contact</h1>
							<a class="contact-text" href="mailto: gaurav@decentralaw.ai">Email Me!</a> <br>
							<a class="contact-text" href="https://calendly.com/decentralawyer">Book an appointment here!</a>
						  </div>

						  <div class="blue-room-popup">
							  <p id="bio-p">C500 try to talk but it's just all hot air
								He's just full of drivel, and his words ain't rare
								He's never been able to string two words together
								His rhymes are like a broken record, they sound worse than leather</p>
							<h1 id="bio-header">Bio</h1>
						  </div>
						  <div class="blue-room-popup-left">
							<p id="bio-p-left">Frederick, you think you can talk your way out of this?
								You think your bars can hit like Jada's?
								Your rhymes are stale, your lyrics are weak
								You can try, but you'll never reach my peak</p>
						  </div>
						</figure>

					  <!-- svg integration end -->
					  <div class="references"></div>
			</main>
		</div>
		<script>
			// defines html elements as variables
			var mainRoom = document.querySelector(".main-room");
			var mainRoomPopup = document.querySelectorAll(".main-room-div-right, .main-room-div-left");
			
			// pink-room variable definitions
			var pinkRoom = document.querySelector(".pink-room");
			var pinkRoomPopup = document.querySelector(".pink-room-popup")

			var blueRoom = document.querySelector(".blue-room");
			var blueRoomPopup = document.querySelectorAll(".blue-room-popup, .blue-room-popup-left")

			// selects the elements and listens for hover motions
			function addPopupListeners(room, popup, top, right, top2, right2) {
				room.addEventListener("mouseover", function() {
					showAndPositionPopup(room, popup, top, right, top2, right2);
				});
				room.addEventListener("mouseout", function() {
					hidePopup(popup);
				});
			}

			addPopupListeners(mainRoom, mainRoomPopup, 20, -10, -5, -870);
			addPopupListeners(pinkRoom, pinkRoomPopup, 100, -550, null, null);
			addPopupListeners(blueRoom, blueRoomPopup, 30, 60, -260, -700);
						
			// function to show the popup
			function showAndPositionPopup(room, popup, top, right, top2, right2) {
				var iconPos = room.getBoundingClientRect();
				if (popup instanceof NodeList) {
					for (let i = 0; i < popup.length; i++) {
						var popupElem = popup[i];
						if (i === 0) {
							popupElem.style.left = iconPos.right + right + "px";
							popupElem.style.top = window.scrollY + iconPos.top + top + "px";
						}
						else if (i === 1) {
							popupElem.style.left = iconPos.right + right2 + "px";
							popupElem.style.top = window.scrollY + iconPos.top + top2 + "px";
						}
						popupElem.style.display = "block";
					}
				} else {
					popup.style.left = iconPos.right + right + "px";
					popup.style.top = window.scrollY + iconPos.top + top + "px";
					popup.style.display = "block";
				}
			}

				function hidePopup(popup) {
					if (popup instanceof NodeList) {
						for (let i = 0; i < popup.length; i++) {
							popup[i].style.display = "none";
						}
					} else {
    					popup.style.display = "none";
					}
				}


		</script>
	</body>
</html>
