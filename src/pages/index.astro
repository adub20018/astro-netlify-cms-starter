---
// Component Imports
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import Footer from '../components/Footer.astro'
import { SITE } from '../config';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let { title } = SITE;
let description = 'Specializing in high growth disruptive technologies';
let permalink = 'https://decentralawyer.netlify.app/'; // ADD URL HERE
---
<html lang="en">
	<head>
		<BaseHead {title} {description} {permalink} />
	</head>

	<body>
		<BlogHeader />
			<main class="content">
					<div class="main-heading">
						<h1 class="main-heading__title">THE DECENTRALAWYER</h1>
						<h2 class="main-heading__bio">{description}</h2>
					</div>
					<figure class="figure">
						<div class="popup-content">
						  <!-- svg integration -->
							<svg
							class="svg"
							viewBox="0 0 1340 1200"
							preserveAspectRatio="xMinYMin meet"
						  >
							<image class="svg__img"
							  xlink:href="/assets/DecentralawyerOfficeMain.webp"
							/>
				  
							<g class="svg__hover-group">
							  <polygon
								class="skills-room"
								points="200, 275 745, 0 1340, 295 1340, 450 948, 647"
							  />
							</g>
							<g class="svg__hover-group">
							  <polygon
								class="bio-room"
								points="320, 840 320, 685 672, 511 1010, 678 1010, 830 660, 1005"
							  />
							</g>
							<g class="svg__hover-group">
							  <polygon
								class="contact-room"
								points="320, 840 320, 685 672, 510 380, 365 0, 550 0, 680  "
							  />
							</g>
						  </svg>
						<!-- svg integration end -->
						<div class="skills-room__container-right" id="skillsID">
							<div class="skills-room__popup-right">
								<div >
									<svg class="svg-pointer"xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs" viewBox="0 0 800 400"><path d="M169.9551544189453,196.4125518798828C169.9551544189453,196.4125518798828,300.8968505859375,195.5157012939453,300.8968505859375,195.5157012939453" fill="none"></path><defs><linearGradient id="SvgjsLinearGradient1001"><stop stop-color="hsl(37, 99%, 67%)" offset="0"></stop><stop stop-color="hsl(316, 73%, 52%)" offset="1"></stop></linearGradient></defs></svg>
								</div>
									<h1 class="skills-room__popup-title">Skills</h1>
									<h2 class="feature-text">Welcome to TechLaw Firm</h2> 
									<p class="skills-room__popup-text">
										Where we specialize in providing legal services to cutting edge technology companies. Our team has a deep understanding of the complex legal issues surrounding the latest advancements in the tech industry.
									</p>
								</div>
							</div>
							<div class="skills-room__container-left">
								<div class="skills-room__popup-left">
									<p class="skills-room__popup-text">
										<span class="feature-text">From patent law to data privacy regulations </span> we have the expertise to protect your business and help you navigate the constantly evolving legal landscape.
									</p>
								</div>
							</div>

								<div class="bio-room__container-right" id="bioID">
									<div class="bio-room__popup-right">
										<p class="bio-room__popup-text">
											<span class="feature-text">Whether you're a startup or a well-established company</span>, we have the knowledge and resources to help you succeed. Contact us today to schedule a consultation and learn how we can help your business thrive.
										</p>
										<h1 class="bio-room__popup-title">Bio</h1>
									</div>
								</div>
								<div class="bio-room__container-left">
									<div class="bio-room__popup-left">
										<p class="bio-room__popup-text">
											<span class="feature-text"> John Doe, a partner at TechLaw Firm</span> John has over a decade of experience in the tech industry and is a leading expert in patent law. He has successfully represented clients in a wide range of technology fields.
										</p>
									</div>
								</div>
								<div class="contact-room__popup" id="contactID">
									<h1 class="contact-room__popup-title">Contact</h1>									
									<h2 class="contact-room__popup-text-container">
										<a class="contact-room__popup-text blue" href="https://calendly.com/decentralawyer"><img src="/assets/blue.png" class="contact-room__popup-img" alt="blue contact button icon">Book a Meeting</a></h2> <br>
									<h2 class="contact-room__popup-text-container">
										<a class="contact-room__popup-text" href="mailto: gaurav@decentralaw.ai"><img src="/assets/email.png" class="contact-room__popup-img-email" alt="email button icon">Email Me!</a>
									</h2>

								</div>

							</div>
						</figure>
						<Footer />
					</main>

		<script>
		window.onload = function() {
			// defines html elements as variables
			const mainRoom = document.querySelector(".skills-room");
			const mainRoomPopup = document.querySelectorAll(".skills-room__popup-right, .skills-room__popup-left");
			
			// pink-room variable definitions
			const pinkRoom = document.querySelector(".contact-room");
			const pinkRoomPopup = document.querySelector(".contact-room__popup")

			const blueRoom = document.querySelector(".bio-room");
			const blueRoomPopup = document.querySelectorAll(".bio-room__popup-right, .bio-room__popup-left")

			// nav variables
			const skillsNav = document.querySelector(".skillsNav");
			const bioNav = document.querySelector(".bioNav");
			const contactNav = document.querySelector(".contactNav");

			let clickedRoom = null;
			let clickedNav = null;

			// adds event listeners to the given room and popup elements
			function addPopupListeners(room, popup, nav, color) {
				// detects hover
				room.addEventListener("mouseover", function() {
					showPopup(room, popup, nav, color);
					nav.style.color = color;
					room.classList.add("clicked")
					room.style.stroke = color;
				});

				// detects click
				room.addEventListener("click", function () {
					showPopup(room, popup, nav, color);
					room.classList.toggle("clicked")

					  // reset previously clicked nav element
					if (clickedNav !== null && clickedNav !== nav) {
						clickedNav.style.color = "";
					}
					clickedNav = nav;
				});

				// detects mouse off unless room is clicked
				room.addEventListener("mouseout", function() {
					if (!room.classList.contains("clicked")) {
						hidePopup(popup);
						nav.style.color = "";
						nav.style.textDecoration = "";
					}
				});

				nav.addEventListener("click", function() {
					if (window.innerWidth >= 765) {
					showPopup(room, popup, nav, color);
					nav.style.color = color
					room.style.fill = "transparent";
					clickedRoom.style.stroke = color;
					}
				});
				
			}
			
			function mobileScreenListener (nav, id) {
				if (window.innerWidth <= 765) {
					nav.setAttribute("href", id);
				} else {
					nav.removeAttribute("href");
  }
			}

			// calls the popup listeners with each room and their corresponding popups
			addPopupListeners(mainRoom, mainRoomPopup, skillsNav, "#73bed3");
			addPopupListeners(pinkRoom, pinkRoomPopup, contactNav, "#df84a5");
			addPopupListeners(blueRoom, blueRoomPopup, bioNav, "#a4dddb");

			mobileScreenListener(skillsNav, "#skillsID");
			mobileScreenListener(contactNav, "#contactID");
			mobileScreenListener(bioNav, "#bioID");
						
			// function to show the popup to the corresponding room
			function showPopup(room, popup, nav, color) {
				// if a room is clicked and hover moves to new room, popup is hidden 
				if (clickedRoom !== null && clickedRoom !== room) {
					hidePopup(clickedRoom.popup);
					clickedRoom.classList.remove("clicked");
					clickedNav.style.color = "";
    				clickedNav.style.textDecoration = "";
					clickedRoom.style.fill = "";
					clickedRoom.style.stroke = "";
				}

				// updates the clicked room/nav to display only the new text
				clickedRoom = room;
				room.popup = popup;
				clickedNav = nav;
				nav.style.color = room.color;
				nav.style.textDecoration = "underline";

				// loops through popup elements and sets display to block
				if (popup instanceof NodeList) {
					for (let i = 0; i < popup.length; i++) {
						var popupElem = popup[i];
						popupElem.style.display = "block";
					}
				} else {
					// display for contact room due to single element
					popup.style.display = "block";
				}
			}

				// hides the given popup
				function hidePopup(popup) {
					// loops through elements and sets display to none & checks that screen is in desktop view
					if (popup instanceof NodeList && window.innerWidth >= 765) {
						for (let i = 0; i < popup.length; i++) {
							popup[i].style.display = "none";
						}
					} else {
						// display for single element contact room & checks that screen is in desktop view
						if (window.innerWidth >= 765) {
    					popup.style.display = "none";
						}
					}
				}
			}
		</script>
	</body>
</html>
